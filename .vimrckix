if g:vimrcdebug | echo "Running vimrckix" | endif

" Our localization files are pretty big...just skip processing these...
set wildignore+=en_US_embedded.json
" Going to let it process en_us.json for now, see if our LargeFile function handles it...
"set wildignore+=en_us.json

function! SwitchToParent(path, parent)
	" Note: the non-greedy '.\{-}' is used rather than '.*'
	" This is because we (for some stupid reason) have paths like
	" enyo/src/enyo/atlasconnection.cpp
	exec "lcd " . matchstr(a:path, '^.\{-}\/'.a:parent)
endfunction

function! EnyoSettings(path)
	call SwitchToParent(a:path, 'enyo')
	call EnyoIgnores(0)
endfunction

function! EnyoIgnores(includesubdirpath)
	let prefix="set wildignore+="
	if a:includesubdirpath
		let prefix.="enyo/"
	endif
	set wildignore+=**/alchemy/game/**
	exec prefix."actionscript/**"
	exec prefix."build/**"
	exec prefix."build/wc*/**"
	exec prefix."buildtools/**"
	exec prefix."**/build/**"
	exec prefix."compile/**"
	exec prefix."conf/**"
	exec prefix."db/**"
	exec prefix."dist/**"
	exec prefix."docker/**"
	exec prefix."hooks/**"
	exec prefix."libs/**"
	exec prefix."locks/**"
	exec prefix."playlogs/**"
	exec prefix."project/**"
	exec prefix."service/**"
	exec prefix."simpleclient/**"
	exec prefix."test/**"
	exec prefix."tools/**"
	exec prefix."xcodeproj/**"
	exec prefix."AiboxBuild/build/**"
	exec prefix."EnyoBuild/build/**"
	exec prefix."EnyoBuild/xcodeproj/**"
endfunction

function! ClientSettings(path)
	call SwitchToParent(a:path, 'client/src')
	call ClientIgnores(0)
endfunction

function! ClientIgnores(includesubdirpath)
	let prefix="set wildignore+="
	if a:includesubdirpath
		let prefix.="client/"
	endif
	"exec prefix."**"
	exec prefix."core/**"
	exec prefix."data/**"
	exec prefix."feharness/**"
	exec prefix."obfuscation/**"
	exec prefix."scoreboard/**"
	exec prefix."src/bin/**"
	exec prefix."src/com/**"
	exec prefix."src/nl/**"
	exec prefix."src/org/**"
	exec prefix."src/staging/embedded/**"
	exec prefix."src/staging/manifest/**"
	exec prefix."src/staging/playlogs/**"
	"exec prefix."src/staging/**"
	exec prefix."src/*.as"
	exec prefix."test/**"
	exec prefix."xbaux/**"
endfunction

function! WCDataSettings(path)
	call SwitchToParent(a:path, 'wc-data')
	call WCDataIgnores(0)
endfunction

function! WCDataIgnores(includesubdirpath)
	let prefix="set wildignore+="
	if a:includesubdirpath
		let prefix.="wc-data/"
	endif
	set wildignore+=**/client-asset-manifest/**
	set wildignore+=**/gamedata-manifest/**
	exec prefix."bin/**"
	"exec prefix."ftl/**"
	exec prefix."fmscripts*/**"
	exec prefix."libs/**"
	exec prefix."protobufs/**"
	exec prefix."scripts/**"
endfunction

function! FWSettings(path)
	call SwitchToParent(a:path, 'framework')
	call FWIgnores(0)
endfunction

function! FWIgnores(includesubdirpath)
	let prefix="set wildignore+="
	if a:includesubdirpath
		let prefix.="framework/"
	endif
	"set wildignore+=**/client-asset-manifest/**
	"exec prefix."bin/**"
	"exec prefix."scripts/**"
endfunction

function! GetCurrentRepoSubDir()
	let curpath=expand("%:p:h")
	if g:vimrcdebug | echom "Current path = " . curpath | endif
	if curpath =~ "wc-data"
		return 'wc-data/**'
	elseif curpath =~ "client/src"
		return 'client/src/**'
	elseif curpath =~ "enyo"
		return 'enyo/**'
	elseif curpath =~ "framework"
	    return 'framework/**'
	endif
	return '**'
endfunction

function! GetRepoRootDir(path, rootparent)
	return matchstr(a:path, '^.*\/'.a:rootparent.'\/\i\+')
endfunction

function! SwitchToRepoRoot(path, rootparent)
	"exec "lcd " . matchstr(a:path, '^.*\/'.a:rootparent.'\/\i\+')
	exec "lcd " . GetRepoRootDir(a:path, a:rootparent)
endfunction

function! FullWCProjectSettings(path)
	call SwitchToRepoRoot(a:path, 'kixeye/wc')

	" These will override the mappings in the main vimrc to search only the current subdirectory by default
	noremap <C-G> :call FindInFiles('\<'.expand("<cword>").'\>',GetCurrentRepoSubDir())<CR>
	"exec "noremap <C-G> :call FindInFiles('\<'.expand(\"<cword>\").'\>','".GetCurrentRepoSubDir()."')<CR>"
	" Note: After putting the text in, move the cursor will end up between the search quotes
	exec "noremap <C-S-F> :call FindInFiles('', '".GetCurrentRepoSubDir()."')<S-Left><Left><Left><Left>"
	
	" Repos
	"set wildignore+=build-tools/**
	"set wildignore+=framework/**
	" Note: Break down gameservices into its components, to include protobufs
	set wildignore+=gameservices/**
	set wildignore+=ltclient/**
	set wildignore+=shared/**

	call EnyoIgnores(1)
	"call ClientIgnores(1)
	set wildignore+=client/**
	call WCDataIgnores(1)
	"call FWIgnores(1)
	set wildignore+=framework/**
endfunction

if &diff
	" Don't go through all this if we're doing a diff right now
else
	" Set working directory to repo root
	autocmd BufEnter * if expand("%:p:h") =~ 'kixeye/wc/*' | call FullWCProjectSettings(expand("%:p:h")) | endif
	" Set working directory to repo sub directory
	"autocmd BufEnter * if expand("%:p:h") =~ 'enyo' | call EnyoSettings(expand("%:p:h")) | endif
	"autocmd BufEnter * if expand("%:p:h") =~ 'client/src' | call ClientSettings(expand("%:p:h")) | endif
	"autocmd BufEnter * if expand("%:p:h") =~ 'wc-data' | call WCDataSettings(expand("%:p:h")) | endif
endif


"function! ActionscriptSettings()
"	set omnifunc=actionscriptcomplete#CompleteAS
"	set dictionary=$HOME/.vim/dict/actionscript.dict
"	noremap <C-G> :exec "vimgrep /\\\<" . expand("<cword>") . "\\\>/j **/*.as" <Bar> cw<CR>
"	noremap <C-S-F> :exec "vimgrep //j **/*.as" <Bar> cw<Left><Left><Left><Left><Left><Left><Left><Left><Left><Left><Left><Left><Left><Left><Left><Left>
"endfunction
"autocmd FileType actionscript call ActionscriptSettings()
